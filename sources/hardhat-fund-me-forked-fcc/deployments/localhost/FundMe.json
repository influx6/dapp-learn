{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeed",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "cheaperWithdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getVersion",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "s_addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "s_funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "s_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "s_priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "transactionHash": "0xd55484831a17cefd56bc714b2d6d350deb7f4113f1b35dd2713bc4eb5fa46aec",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "987530",
    "logsBloom": "0x
    "blockHash": "0x16aab58d116ac4a07a726d9a1168b209c88cff0da9e32251b46cfb3773189ad4",
    "transactionHash": "0xd55484831a17cefd56bc714b2d6d350deb7f4113f1b35dd2713bc4eb5fa46aec",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "987530",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "c3aba118db4b62025d5a7b53eec5c8cd",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeed\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"cheaperWithdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVersion\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"s_addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"s_funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\ncontract FundMe {\\n  using PriceConverter for uint256;\\n\\n  mapping(address => uint256) public s_addressToAmountFunded;\\n  address[] public s_funders;\\n  address public s_owner;\\n  AggregatorV3Interface public s_priceFeed;\\n\\n  constructor(address priceFeed) {\\n    s_priceFeed = AggregatorV3Interface(priceFeed);\\n    s_owner = msg.sender;\\n  }\\n\\n  function fund() public payable {\\n    uint256 minimumUSD = 50 * 10**18;\\n    require(\\n      msg.value.getConversionRate(s_priceFeed) >= minimumUSD,\\n      \\\"You need to spend more ETH!\\\"\\n    );\\n    // require(PriceConverter.getConversionRate(msg.value) >= minimumUSD, \\\"You need to spend more ETH!\\\");\\n    s_addressToAmountFunded[msg.sender] += msg.value;\\n    s_funders.push(msg.sender);\\n  }\\n\\n  function getVersion() public view returns (uint256) {\\n    return s_priceFeed.version();\\n  }\\n\\n  modifier onlyOwner() {\\n    require(msg.sender == s_owner);\\n    _;\\n  }\\n\\n  function withdraw() public payable onlyOwner {\\n    payable(msg.sender).transfer(address(this).balance);\\n    for (\\n      uint256 funderIndex = 0;\\n      funderIndex < s_funders.length;\\n      funderIndex++\\n    ) {\\n      address funder = s_funders[funderIndex];\\n      s_addressToAmountFunded[funder] = 0;\\n    }\\n    s_funders = new address[](0);\\n  }\\n\\n  function cheaperWithdraw() public payable onlyOwner {\\n    payable(msg.sender).transfer(address(this).balance);\\n    address[] memory funders = s_funders;\\n    for (uint256 funderIndex = 0; funderIndex < funders.length; funderIndex++) {\\n      address funder = funders[funderIndex];\\n      s_addressToAmountFunded[funder] = 0;\\n    }\\n    s_funders = new address[](0);\\n  }\\n}\\n\",\"keccak256\":\"0x8bcf8d65871d7362c88e91802c9828f70a0ff63e0b866e1ae865c6065a1ca076\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConverter {\\n  function getPrice(AggregatorV3Interface priceFeed)\\n    internal\\n    view\\n    returns (uint256)\\n  {\\n    (, int256 answer, , , ) = priceFeed.latestRoundData();\\n    // ETH/USD rate in 18 digit\\n    return uint256(answer * 10000000000);\\n  }\\n\\n  // 1000000000\\n  function getConversionRate(uint256 ethAmount, AggregatorV3Interface priceFeed)\\n    internal\\n    view\\n    returns (uint256)\\n  {\\n    uint256 ethPrice = getPrice(priceFeed);\\n    uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\n    // the actual ETH/USD conversation rate, after adjusting the extra 0s.\\n    return ethAmountInUsd;\\n  }\\n}\\n\",\"keccak256\":\"0xab35a7e2709a5233ba0d9ea046a0fdb0a3df46ea204081df35b076f34fb62fb2\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506040516200117a3803806200117a83398181016040528101906200003791906200012a565b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555033600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200015c565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000f282620000c5565b9050919050565b6200010481620000e5565b81146200011057600080fd5b50565b6000815190506200012481620000f9565b92915050565b600060208284031215620001435762000142620000c0565b5b6000620001538482850162000113565b91505092915050565b61100e806200016c6000396000f3fe60806040526004361061007b5760003560e01c806354861af71161004e57806354861af71461011d578063b60d42881461015a578063be2693f014610164578063e39782401461016e5761007b565b80630d8e6e2c146100805780630ec3b027146100ab5780631bf6132d146100d65780633ccfd60b14610113575b600080fd5b34801561008c57600080fd5b50610095610199565b6040516100a29190610981565b60405180910390f35b3480156100b757600080fd5b506100c0610240565b6040516100cd9190610a1b565b60405180910390f35b3480156100e257600080fd5b506100fd60048036038101906100f89190610a79565b610266565b60405161010a9190610981565b60405180910390f35b61011b61027e565b005b34801561012957600080fd5b50610144600480360381019061013f9190610ad2565b61042d565b6040516101519190610b0e565b60405180910390f35b61016261046c565b005b61016c6105ac565b005b34801561017a57600080fd5b506101836107bf565b6040516101909190610b0e565b60405180910390f35b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b815260040160206040518083038186803b15801561020357600080fd5b505afa158015610217573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061023b9190610b3e565b905090565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006020528060005260406000206000915090505481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102d857600080fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f1935050505015801561031e573d6000803e3d6000fd5b5060005b6001805490508110156103ca5760006001828154811061034557610344610b6b565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806103c290610bc9565b915050610322565b50600067ffffffffffffffff8111156103e6576103e5610c12565b5b6040519080825280602002602001820160405280156104145781602001602082028036833780820191505090505b506001908051906020019061042a9291906108c1565b50565b6001818154811061043d57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006802b5e3af16b18800009050806104b0600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346107e590919063ffffffff16565b10156104f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104e890610c9e565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461053f9190610cbe565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461060657600080fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f1935050505015801561064c573d6000803e3d6000fd5b50600060018054806020026020016040519081016040528092919081815260200182805480156106d157602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610687575b5050505050905060005b815181101561075b5760008282815181106106f9576106f8610b6b565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061075390610bc9565b9150506106db565b50600067ffffffffffffffff81111561077757610776610c12565b5b6040519080825280602002602001820160405280156107a55781602001602082028036833780820191505090505b50600190805190602001906107bb9291906108c1565b5050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806107f183610821565b90506000670de0b6b3a7640000858361080a9190610d14565b6108149190610d9d565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561086a57600080fd5b505afa15801561087e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108a29190610e46565b5050509150506402540be400816108b99190610ec1565b915050919050565b82805482825590600052602060002090810192821561093a579160200282015b828111156109395782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906108e1565b5b509050610947919061094b565b5090565b5b8082111561096457600081600090555060010161094c565b5090565b6000819050919050565b61097b81610968565b82525050565b60006020820190506109966000830184610972565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006109e16109dc6109d78461099c565b6109bc565b61099c565b9050919050565b60006109f3826109c6565b9050919050565b6000610a05826109e8565b9050919050565b610a15816109fa565b82525050565b6000602082019050610a306000830184610a0c565b92915050565b600080fd5b6000610a468261099c565b9050919050565b610a5681610a3b565b8114610a6157600080fd5b50565b600081359050610a7381610a4d565b92915050565b600060208284031215610a8f57610a8e610a36565b5b6000610a9d84828501610a64565b91505092915050565b610aaf81610968565b8114610aba57600080fd5b50565b600081359050610acc81610aa6565b92915050565b600060208284031215610ae857610ae7610a36565b5b6000610af684828501610abd565b91505092915050565b610b0881610a3b565b82525050565b6000602082019050610b236000830184610aff565b92915050565b600081519050610b3881610aa6565b92915050565b600060208284031215610b5457610b53610a36565b5b6000610b6284828501610b29565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610bd482610968565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610c0757610c06610b9a565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610c88601b83610c41565b9150610c9382610c52565b602082019050919050565b60006020820190508181036000830152610cb781610c7b565b9050919050565b6000610cc982610968565b9150610cd483610968565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610d0957610d08610b9a565b5b828201905092915050565b6000610d1f82610968565b9150610d2a83610968565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610d6357610d62610b9a565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610da882610968565b9150610db383610968565b925082610dc357610dc2610d6e565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610ded81610dce565b8114610df857600080fd5b50565b600081519050610e0a81610de4565b92915050565b6000819050919050565b610e2381610e10565b8114610e2e57600080fd5b50565b600081519050610e4081610e1a565b92915050565b600080600080600060a08688031215610e6257610e61610a36565b5b6000610e7088828901610dfb565b9550506020610e8188828901610e31565b9450506040610e9288828901610b29565b9350506060610ea388828901610b29565b9250506080610eb488828901610dfb565b9150509295509295909350565b6000610ecc82610e10565b9150610ed783610e10565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610f1657610f15610b9a565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610f5357610f52610b9a565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610f9057610f8f610b9a565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610fcd57610fcc610b9a565b5b82820290509291505056fea2646970667358221220affe38e2879dc706d77154da2c97774eede59deb074035be8c6e2b11cd7ab51d64736f6c63430008080033",
  "deployedBytecode": "0x60806040526004361061007b5760003560e01c806354861af71161004e57806354861af71461011d578063b60d42881461015a578063be2693f014610164578063e39782401461016e5761007b565b80630d8e6e2c146100805780630ec3b027146100ab5780631bf6132d146100d65780633ccfd60b14610113575b600080fd5b34801561008c57600080fd5b50610095610199565b6040516100a29190610981565b60405180910390f35b3480156100b757600080fd5b506100c0610240565b6040516100cd9190610a1b565b60405180910390f35b3480156100e257600080fd5b506100fd60048036038101906100f89190610a79565b610266565b60405161010a9190610981565b60405180910390f35b61011b61027e565b005b34801561012957600080fd5b50610144600480360381019061013f9190610ad2565b61042d565b6040516101519190610b0e565b60405180910390f35b61016261046c565b005b61016c6105ac565b005b34801561017a57600080fd5b506101836107bf565b6040516101909190610b0e565b60405180910390f35b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b815260040160206040518083038186803b15801561020357600080fd5b505afa158015610217573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061023b9190610b3e565b905090565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006020528060005260406000206000915090505481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102d857600080fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f1935050505015801561031e573d6000803e3d6000fd5b5060005b6001805490508110156103ca5760006001828154811061034557610344610b6b565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806103c290610bc9565b915050610322565b50600067ffffffffffffffff8111156103e6576103e5610c12565b5b6040519080825280602002602001820160405280156104145781602001602082028036833780820191505090505b506001908051906020019061042a9291906108c1565b50565b6001818154811061043d57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006802b5e3af16b18800009050806104b0600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346107e590919063ffffffff16565b10156104f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104e890610c9e565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461053f9190610cbe565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461060657600080fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f1935050505015801561064c573d6000803e3d6000fd5b50600060018054806020026020016040519081016040528092919081815260200182805480156106d157602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610687575b5050505050905060005b815181101561075b5760008282815181106106f9576106f8610b6b565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061075390610bc9565b9150506106db565b50600067ffffffffffffffff81111561077757610776610c12565b5b6040519080825280602002602001820160405280156107a55781602001602082028036833780820191505090505b50600190805190602001906107bb9291906108c1565b5050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806107f183610821565b90506000670de0b6b3a7640000858361080a9190610d14565b6108149190610d9d565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561086a57600080fd5b505afa15801561087e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108a29190610e46565b5050509150506402540be400816108b99190610ec1565b915050919050565b82805482825590600052602060002090810192821561093a579160200282015b828111156109395782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906108e1565b5b509050610947919061094b565b5090565b5b8082111561096457600081600090555060010161094c565b5090565b6000819050919050565b61097b81610968565b82525050565b60006020820190506109966000830184610972565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006109e16109dc6109d78461099c565b6109bc565b61099c565b9050919050565b60006109f3826109c6565b9050919050565b6000610a05826109e8565b9050919050565b610a15816109fa565b82525050565b6000602082019050610a306000830184610a0c565b92915050565b600080fd5b6000610a468261099c565b9050919050565b610a5681610a3b565b8114610a6157600080fd5b50565b600081359050610a7381610a4d565b92915050565b600060208284031215610a8f57610a8e610a36565b5b6000610a9d84828501610a64565b91505092915050565b610aaf81610968565b8114610aba57600080fd5b50565b600081359050610acc81610aa6565b92915050565b600060208284031215610ae857610ae7610a36565b5b6000610af684828501610abd565b91505092915050565b610b0881610a3b565b82525050565b6000602082019050610b236000830184610aff565b92915050565b600081519050610b3881610aa6565b92915050565b600060208284031215610b5457610b53610a36565b5b6000610b6284828501610b29565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610bd482610968565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610c0757610c06610b9a565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610c88601b83610c41565b9150610c9382610c52565b602082019050919050565b60006020820190508181036000830152610cb781610c7b565b9050919050565b6000610cc982610968565b9150610cd483610968565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610d0957610d08610b9a565b5b828201905092915050565b6000610d1f82610968565b9150610d2a83610968565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610d6357610d62610b9a565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610da882610968565b9150610db383610968565b925082610dc357610dc2610d6e565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610ded81610dce565b8114610df857600080fd5b50565b600081519050610e0a81610de4565b92915050565b6000819050919050565b610e2381610e10565b8114610e2e57600080fd5b50565b600081519050610e4081610e1a565b92915050565b600080600080600060a08688031215610e6257610e61610a36565b5b6000610e7088828901610dfb565b9550506020610e8188828901610e31565b9450506040610e9288828901610b29565b9350506060610ea388828901610b29565b9250506080610eb488828901610dfb565b9150509295509295909350565b6000610ecc82610e10565b9150610ed783610e10565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610f1657610f15610b9a565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610f5357610f52610b9a565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610f9057610f8f610b9a565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610fcd57610fcc610b9a565b5b82820290509291505056fea2646970667358221220affe38e2879dc706d77154da2c97774eede59deb074035be8c6e2b11cd7ab51d64736f6c63430008080033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 56,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_addressToAmountFunded",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 59,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 61,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_owner",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 64,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "3",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}